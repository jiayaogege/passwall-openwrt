name: OpenWrt Build for Newifi3 (D2)

on:
  workflow_dispatch:
    inputs:
      clean_build:
        description: '全新编译（跳过缓存）'
        required: false
        default: 'false'
  push:
    branches: [ main ]
    paths: [ 'newifi3.config' ]
  pull_request:
    paths: [ 'newifi3.config' ]

env:
  # ===== 修正后的仓库参数 =====
  REPO_OWNER: "Lienol"
  REPO_NAME: "openwrt"
  REPO_BRANCH: "19.07"
  TARGET_DEVICE: "d-team_newifi-d2"
  BUILD_THREADS: 6

jobs:
  firmware-build:
    runs-on: ubuntu-22.04
    timeout-minutes: 130

    steps:
    # ===== 修正检出方式 =====
    - name: 检出主仓库
      uses: actions/checkout@v4
      with:
        path: config-repo
        fetch-depth: 0

    - name: 安装编译依赖
      run: |
        sudo apt-get update -qq
        sudo DEBIAN_FRONTEND=noninteractive apt-get install -y \
          build-essential clang flex bison g++ gawk gcc-multilib \
          gettext git libncurses-dev libssl-dev python3-distutils \
          rsync unzip zlib1g-dev file wget curl

    # ===== 关键修正点 =====
    - name: 克隆OpenWrt源码
      uses: actions/checkout@v4
      with:
        repository: ${{ env.REPO_OWNER }}/${{ env.REPO_NAME }}  # 使用正确格式
        ref: ${{ env.REPO_BRANCH }}
        path: openwrt-src
        fetch-depth: 1

    - name: 应用设备配置
      run: |
        cp config-repo/newifi3.config openwrt-src/.config
        if [ -f "config-repo/patches/mt7621.patch" ]; then
          git -C openwrt-src apply ../config-repo/patches/mt7621.patch
        fi

    # ===== 其他保持不变的配置 =====
    - name: 配置编译缓存
      if: ${{ !inputs.clean_build }}
      uses: actions/cache@v4
      with:
        path: |
          openwrt-src/dl
          openwrt-src/staging_dir/host
          openwrt-src/staging_dir/toolchain-*
        key: ${{ runner.os }}-newifi3-${{ hashFiles('newifi3.config') }}-v4

    - name: 准备编译系统
      run: |
        cd openwrt-src
        make defconfig
        for retry in {1..3}; do
          make -j${{ env.BUILD_THREADS }} download && break
          sleep $((retry * 20))
        done

    - name: 编译固件
      env:
        FORCE_UNSAFE_CONFIGURE: 1
      run: |
        cd openwrt-src
        if ! make -j${{ env.BUILD_THREADS }} V=s; then
          make -j1 V=s tools/install
          make -j1 V=s toolchain/install
          make -j${{ env.BUILD_THREADS }} V=s
        fi
        [ -f bin/targets/ramips/mt7621/*.bin ] || exit 1

    - name: 打包编译产物
      run: |
        mkdir -p artifacts/${{ env.TARGET_DEVICE }}
        cp openwrt-src/bin/targets/ramips/mt7621/*.bin artifacts/${{ env.TARGET_DEVICE }}/
        cd artifacts/${{ env.TARGET_DEVICE }}
        sha256sum *.bin > sha256sum.txt
        echo "ARTIFACT_PATH=$(pwd)" >> $GITHUB_ENV

    - name: 上传固件
      uses: actions/upload-artifact@v4
      with:
        name: newifi3-firmware-${{ github.run_id }}
        path: ${{ env.ARTIFACT_PATH }}
        compression-level: 0

    - name: 创建版本发布
      if: github.event_name == 'push'
      uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: "newifi3-${{ github.sha }}"
        files: ${{ env.ARTIFACT_PATH }}/*.bin

    - name: 清理旧版本
      uses: dev-drprasad/delete-older-releases@v0.2.0
      with:
        keep_latest: 5
        delete_tag_pattern: "newifi3-*"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
